rules_version = '2';
service cloud.firestore {
match /databases/{database}/documents {

// Private user data: Only the user themselves can read/write their expenses.
match /artifacts/{appId}/users/{userId}/expenses/{expenseId} {
  allow read, write: if request.auth != null && request.auth.uid == userId;
}

// Public user profiles
match /artifacts/{appId}/public/data/users/{userId} {
  // Anyone can read public user profiles
  allow read: if request.auth != null;
  // Only the user themselves can create or update their profile
  allow write: if request.auth != null && request.auth.uid == userId;
}

// Public pool data:
match /artifacts/{appId}/public/data/pools/{poolId} {
  // Allow read access only to members of the pool.
  allow read: if request.auth != null && request.auth.uid in resource.data.members;

  // Allow a user to create a pool (making sure they add themselves as the first member)
  // OR update a pool (e.g., to join), but only if their ID is in the *new* list of members.
  allow create, update: if request.auth != null && request.auth.uid in request.resource.data.members;
}

// Pool expenses: Only members of a pool can read or write expenses in it.
match /artifacts/{appId}/public/data/pools/{poolId}/expenses/{expenseId} {
  allow read, write: if request.auth != null && 
    request.auth.uid in get(/databases/$(database)/documents/artifacts/$(appId)/public/data/pools/$(poolId)).data.members;
}
}
}